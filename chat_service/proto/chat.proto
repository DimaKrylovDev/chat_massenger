syntax="proto3";

service ChatService{
    
    rpc CreateChat(CreateChatRequest) returns (CreateChatResponse);
    
    rpc GetUserChats(GetUserChatsRequest) returns (GetUserChatsResponse);

    rpc DeleteChat(DeleteChatRequest) returns (DeleteChatResponse);
    
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);

    rpc DeleteMessage(DeleteMessageRequest) returns (DeleteMessageResponse);
    
    rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse);

    rpc AddParticipant(AddParticipantRequest) returns (AddParticipantResponse);

    rpc DeleteParticipant(DeleteParticipantRequest) returns (DeleteParticipantResponse);

    rpc GetChatParticipants(GetChatParticipantsRequest) returns (GetChatParticipantsResponse);
}

message CreateChatRequest {
  string user_id = 1;
  string chat_name = 2;
  string description = 3;
}

message CreateChatResponse {
  string chat_id = 1;
  string message = 2;
  bool success = 3;
}

message GetUserChatsRequest {
  string user_id = 1;
}

message GetUserChatsResponse {
  repeated Chat chats = 1;
  int32 total_count = 2;
}

message SendMessageRequest {
  string user_id = 1;
  string chat_id = 2;
  string content = 3;
  string message_type = 4; 
}

message SendMessageResponse {
  string message_id = 1;
  string message = 2;
  bool success = 3;
}

message GetMessagesRequest {
  string user_id = 1;
  string chat_id = 2;
}

message GetMessagesResponse {
  repeated Message messages = 1;
  int32 total_count = 2;
}

message DeleteMessageRequest{
  string user_id = 1;
  string chat_id = 2;
  string message_id = 3;
}

message DeleteMessageResponse{
  bool success = 1;
}

message AddParticipantRequest {
  string user_id = 1;
  string participant_id = 2;
  string chat_id = 3;
  UserType user_type = 4;
}

message AddParticipantResponse {
  bool success = 1;
}

message DeleteParticipantRequest{
  string user_id = 1;
  string chat_id = 2;
  string participant_id = 3;
}
 
message DeleteParticipantResponse{
  bool success = 1;
}

message GetChatParticipantsRequest{
  string chat_id = 1;
  string user_id = 2;
}

message GetChatParticipantsResponse{
  repeated Participant participants = 1;
  int32 total_count = 2;
}

message DeleteChatRequest{
  string user_id = 1;
  string chat_id = 2; 
}

message DeleteChatResponse{
  bool success = 1;
}

message Chat {
  string id = 1;
  string name = 2;
  string description = 3;
  string created_at = 4;
}

enum UserType{
  USER = 0;
  ADMIN = 1;
  OWNER = 2;
}

message Message {
  string id = 1;
  string chat_id = 2;
  string user_id = 3;
  string content = 4;
  string message_type = 5;
  string created_at = 6;
}

message Participant{
  string user_id = 1;
  string chat_id = 2;
}